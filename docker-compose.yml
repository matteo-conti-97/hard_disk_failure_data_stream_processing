# profile all builds all services, profile processing builds all services except Nifi, ingestion buils only HDFS and Nifi services
services: 
  #NIFI 
  nifi:
    build: ./nifi
    container_name: nifi
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=123456789101112
      - NIFI_JVM_HEAP_MAX=2g
    volumes:
      - nifi-data:/opt/nifi/nifi-current/Data
    ports:
      - 8443:8443
      - 5200:5200
    networks:
      - elt_cluster
    profiles: [ingestion, all]

  #KAFKA
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.7
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1
    networks:
      - elt_cluster
    profiles: [all]

  kafka:
    container_name: kafka
    image: bitnami/kafka:3
    ports:
      - "9093:9093"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_TLS_VERIFY_HOSTNAME=false
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      zookeeper:
        condition: service_started
    networks:
      - elt_cluster
    profiles: [all]

#KAFKA INIT TOPIC
  kafka-init:
    container_name: kafka-init
    image: bitnami/kafka:3
    networks:
      - elt_cluster
    command: [ "/bin/bash", "-c", "chmod +x /create_topic.sh && /create_topic.sh"]
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - FLINK_TOPIC_NAME=flink
    depends_on:
      kafka:
        condition: service_started
    volumes:
      - type: bind
        source: ./kafka/create_topic.sh
        target: /create_topic.sh
    init: true
    profiles: [all]

  #FLINK
  jobmanager:
    #image: flink:latest
    build: ./dockerfiles/flink_jobmanager
    container_name: jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager    
    volumes:
      - job-manager-data:/opt/flink/flink-current/data
      - ./flink_scripts:/opt/flink/flink-current/scripts
    networks:
      - elt_cluster
    profiles: [all]    

  taskmanager:
    image: flink:latest
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
    volumes:
      - task-manager-data:/opt/flink/flink-current/data
    networks:
      - elt_cluster
    profiles: [all]   
      
volumes:
  nifi-data:
  job-manager-data:
  task-manager-data:

networks:
  elt_cluster:
    driver: bridge
  
